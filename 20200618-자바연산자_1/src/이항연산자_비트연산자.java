/*
	비트연산자 => 비트와 비트를 연산 ==>	회로, 암호화/복호화할때 많이 쓰이는 연산
			&	 |			^			
		   (*)	(+)		(일치여부 비교) ==> 다른 비트 찾기 ==> 두 값이 같으면  0, 다르면 1
		   =========================
		00	0	 0			0	
		10	0	 1			1
		01	0	 1			1
		11	1	 1			0
		
		10 & 5 = 0 	
		======
		  1010
		* 0101
		------
		  0000
		======
			 0
			 
		10 | 5 = 15 	
		======
		  1010
		+ 0101
		------
		  1111
		======
			15
		
		10 ^ 5 = 15	
		======
		  1010
		^ 0101
		------
		  1111
		======
			15		
			
		27 & 13 = 9
		27 | 13 = 31 	 
		27 ^ 13 = 22
		
	32	16	8	4	2	1
==========================
27=		1	1	0	1	1
13=		0	1	1	0	1
-------------------------
&		0	1	0	0	1	= 9
|		1	1	1	1	1	= 31
^		1	0	1	1	0	= 22		
		
 */
public class 이항연산자_비트연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(10 & 5);
		System.out.println(10 | 5);
		System.out.println(10 ^ 5);
		
		System.out.println(27 & 13);
		System.out.println(27 | 13);
		System.out.println(27 ^ 13);

	}

}
